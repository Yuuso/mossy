<Application
	x:Class="Mossy.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:s="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:Mossy">

    <Application.Resources>

		<!--System-->
		<s:Boolean x:Key="True">True</s:Boolean>
		<s:Boolean x:Key="False">False</s:Boolean>
		<Visibility x:Key="Hidden">Hidden</Visibility>
		<Visibility x:Key="Visible">Visible</Visibility>
		<Visibility x:Key="Collapsed">Collapsed</Visibility>


		<!--Converters-->
		<local:VisibilityConverter x:Key="Conv-Visibility"/>
		<local:RenameVisibilityConverter x:Key="Conv-RenameVisibility"/>
		<local:NotNullConverter x:Key="Conv-NotNull"/>
		<local:IsNotLastItemVisibilityConverter x:Key="Conv-IsNotLastItemVisibility"/>
		<local:DocumentPathImageConverter x:Key="Conv-DocumentPathImage"/>


		<!--Fonts-->
		<FontFamily x:Key="Font-Mono">pack//application:,,,/Assets/Fonts/#Roboto Mono</FontFamily>
		<FontFamily x:Key="Font-Sans">pack//application:,,,/Assets/Fonts/#Plus Jakarta Sans</FontFamily>


		<!--Color Palette-->
		<Color x:Key="Color-Accent">#A4BB2F</Color>
		<Color x:Key="Color-Accent-Alpha10">#1AA4BB2F</Color>
		<Color x:Key="Color-Accent-Alpha25">#40A4BB2F</Color>
		<Color x:Key="Color-Accent-Alpha50">#80A4BB2F</Color>
		<Color x:Key="Color-Accent-Alpha75">#BFA4BB2F</Color>
		<Color x:Key="Color-Accent-Tetradic-1">#2FBB8C</Color>
		<Color x:Key="Color-Accent-Tetradic-3">#BB2F5E</Color>
		<Color x:Key="Color-Background">#222223</Color>
		<Color x:Key="Color-Background-Alpha50">#80222223</Color>
		<Color x:Key="Color-Middleground">#303031</Color>
		<Color x:Key="Color-Middleground-Border">#404041</Color>
		<Color x:Key="Color-Foreground">#F0F0F1</Color>
		<Color x:Key="Color-Label">#C0C0C1</Color>
		<Color x:Key="Color-Disabled-Foreground">#909091</Color>
		<Color x:Key="Color-Disabled-Middleground">#606061</Color>
		<SolidColorBrush x:Key="Brush-Background" Color="{StaticResource Color-Background}"/>
		<SolidColorBrush x:Key="Brush-Background-Alpha50" Color="{StaticResource Color-Background-Alpha50}"/>
		<SolidColorBrush x:Key="Brush-Middleground" Color="{StaticResource Color-Middleground}"/>
		<SolidColorBrush x:Key="Brush-Middleground-Border" Color="{StaticResource Color-Middleground-Border}"/>
		<SolidColorBrush x:Key="Brush-Foreground" Color="{StaticResource Color-Foreground}"/>
		<SolidColorBrush x:Key="Brush-Label" Color="{StaticResource Color-Label}"/>
		<SolidColorBrush x:Key="Brush-Accent" Color="{StaticResource Color-Accent}"/>
		<SolidColorBrush x:Key="Brush-Accent-Alpha10" Color="{StaticResource Color-Accent-Alpha10}"/>
		<SolidColorBrush x:Key="Brush-Accent-Alpha25" Color="{StaticResource Color-Accent-Alpha25}"/>
		<SolidColorBrush x:Key="Brush-Accent-Alpha50" Color="{StaticResource Color-Accent-Alpha50}"/>
		<SolidColorBrush x:Key="Brush-Accent-Alpha75" Color="{StaticResource Color-Accent-Alpha75}"/>
		<SolidColorBrush x:Key="Brush-Disabled-Foreground" Color="{StaticResource Color-Disabled-Foreground}"/>
		<SolidColorBrush x:Key="Brush-Disabled-Middleground" Color="{StaticResource Color-Disabled-Middleground}"/>


		<!--Logo-->
		<Geometry x:Key="Geometry-Logo">
			M36.935,97.418C42.138,123.652 48.873,162.413 61.978,187.619C77.359,217.199 101.003,229.485 132.811,215.936C148.531,209.301
			158.522,196.493 165.988,180.158C174.374,161.81 177.898,137.052 182.828,111.872C184.917,101.204 187.293,90.47
			191.143,80.586C193.867,84.672 196.708,88.919 199.255,93.665C212.754,118.815 220.204,138.31 225.928,163.998C227.122,169.357
			228.651,171.72 231.701,172.352C234.522,172.935 236.553,172.306 240.172,166.658C251.746,148.591 252.294,111.047
			248.886,77.459C247.325,62.074 243.275,48.234 238.139,37.085C225.686,10.054 202.266,0.762 184.693,2.598C172.528,3.87
			157.78,10.266 145.808,29.711C138.832,41.604 133.583,54.55 130.537,68.38C124.7,94.877 125.63,123.897
			122.503,148.057C121.606,154.988 120.831,161.444 118.516,166.897C117.003,170.464 115.571,173.739 112.445,175.975C105.578,180.886
			96.931,171.287 91.052,160.556C75.77,132.662 66.364,91.901 59.088,73.448C53.765,59.95 47.957,55.278 40.868,54.758C36.594,54.444
			29.56,55.912 25.481,65.434C10.528,99.715 4.83,129.731 4.211,155.056C2.841,211.195 25.915,243.384 25.915,243.384C26.947,244.967
			29.088,245.426 30.693,244.408C32.298,243.391 32.763,241.28 31.731,239.697C31.731,239.697 13.212,207.906 19.715,156.185C21.918,138.669
			27.143,118.972 36.935,97.418Z
		</Geometry>

		<LinearGradientBrush x:Key="Brush-Logo">
			<GradientStop Offset="0" Color="{StaticResource Color-Accent-Tetradic-1}"/>
			<GradientStop Offset="0.6" Color="{StaticResource Color-Accent}"/>
		</LinearGradientBrush>


		<!--Icons-->
		<Geometry x:Key="Geometry-DocType-File">
			M54.173,17.648L40.042,2.947L10.648,2.947L10.648,61.373L54.173,61.373L54.173,17.648ZM46.885,20.897L46.885,53.639C46.885,53.639 17.936,53.639
			17.936,53.639C17.936,53.639 17.936,10.681 17.936,10.681C17.936,10.681 37.065,10.681 37.065,10.681L46.885,20.897Z
		</Geometry>
		<Geometry x:Key="Geometry-DocType-Link">
			M74.36,43.841C72.991,21.426 78.972,8.84 93.963,8.303L109.632,7.824L109.632,-13.22L136.598,
			19.155L109.632,51.531L109.632,30.487L85.751,30.487C78.74,30.758 74.986,35.266 74.36,43.841Z
		</Geometry>
		<Geometry x:Key="Geometry-DocType-Url">
			M38.329,25.277C32.433,19.382 22.861,19.382 16.966,25.277C16.966,25.277 5.168,37.075 5.168,37.075C-0.727,42.97
			-0.727,52.543 5.168,58.438C11.063,64.333 20.635,64.333 26.53,58.438C26.53,58.438 26.179,58.789 40.951
			,44.017C36.816,45.263 33.15,45.267 29.451,43.732C20.322,52.861 20.638,52.545 20.638,52.545C17.995,55.188
			13.703,55.188 11.06,52.545C8.418,49.902 8.418,45.611 11.06,42.968C11.06,42.968 22.859,31.17 22.859,
			31.17C25.502,28.527 29.793,28.527 32.436,31.17C34.062,32.796 36.702,32.796 38.329,31.17C39.955,29.544
			39.955,26.903 38.329,25.277ZM25.215,38.391C31.11,44.286 40.682,44.286 46.577,38.391C46.577,38.391
			58.376,26.592 58.376,26.592C64.271,20.697 64.271,11.125 58.376,5.23C52.481,-0.665 42.908,-0.665
			37.013,5.23C37.013,5.23 37.364,4.879 22.592,19.651C26.727,18.405 30.394,18.401 34.092,19.936C43.222,10.806
			42.906,11.123 42.906,11.123C45.549,8.48 49.84,8.48 52.483,11.123C55.126,13.766 55.126,18.057
			52.483,20.7C52.483,20.7 40.685,32.498 40.685,32.498C38.042,35.141 33.751,35.141 31.108,32.498C29.481,30.872
			26.841,30.872 25.215,32.498C23.589,34.124 23.589,36.765 25.215,38.391Z
		</Geometry>


		<!--Text-->
		<Style x:Key="Style-BodyText" TargetType="TextBlock">
			<Setter Property="Foreground" Value="{StaticResource Brush-Foreground}"/>
			<Setter Property="FontFamily" Value="{StaticResource Font-Sans}"/>
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="FontStyle" Value="Normal"/>
			<Setter Property="FontWeight" Value="Regular"/>
		</Style>
		<Style TargetType="TextBlock" BasedOn="{StaticResource Style-BodyText}"/>

		<Style x:Key="Style-Hyperlink" TargetType="Hyperlink">
			<Setter Property="Foreground" Value="{StaticResource Brush-Accent}"/>
			<Setter Property="FontFamily" Value="{StaticResource Font-Sans}"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="FontStyle" Value="Normal"/>
			<Setter Property="FontWeight" Value="Regular"/>
		</Style>
		<Style TargetType="Hyperlink" BasedOn="{StaticResource Style-Hyperlink}"/>

		<Style x:Key="Style-LabelText" TargetType="TextBlock">
			<Setter Property="Foreground" Value="{StaticResource Brush-Label}"/>
			<Setter Property="FontFamily" Value="{StaticResource Font-Sans}"/>
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="FontStyle" Value="Normal"/>
			<Setter Property="FontWeight" Value="Light"/>
		</Style>


		<!--Focus Visual-->
		<Style x:Key="Style-FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Border>
							<Rectangle
								Margin="2"
								StrokeThickness="1"
								Stroke="{StaticResource Brush-Accent-Alpha75}"
								StrokeDashArray="1 2"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<!--Button-->
		<Style x:Key="Style-Button-Base" TargetType="Button">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource Style-FocusVisual}" />
			<Setter Property="Foreground" Value="{StaticResource Brush-Foreground}"/>
			<Setter Property="MinHeight" Value="25"/>
			<Setter Property="MinWidth" Value="75"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border x:Name="Border" TextBlock.Foreground="{TemplateBinding Foreground}" CornerRadius="2" BorderThickness="1">
							<Border.BorderBrush>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<LinearGradientBrush.GradientStops>
										<GradientStopCollection>
											<GradientStop Color="{StaticResource Color-Middleground-Border}" Offset="0.0" />
											<GradientStop Color="{StaticResource Color-Middleground-Border}" Offset="1.0" />
										</GradientStopCollection>
									</LinearGradientBrush.GradientStops>
								</LinearGradientBrush>
							</Border.BorderBrush>
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="{StaticResource Color-Middleground}" Offset="0"/>
									<GradientStop Color="{StaticResource Color-Middleground}" Offset="2"/>
								</LinearGradientBrush>
							</Border.Background>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.1"/>
										<VisualTransition GeneratedDuration="0" To="Pressed"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames
												Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
												Storyboard.TargetName="Border">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color-Accent}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ColorAnimationUsingKeyFrames
												Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
												Storyboard.TargetName="Border">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color-Accent}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames
												Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
												Storyboard.TargetName="Border">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color-Accent}" />
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames
												Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
												Storyboard.TargetName="Border">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color-Accent}" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames
												Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
												Storyboard.TargetName="Border">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color-Disabled-Middleground}"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames
												Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
												Storyboard.TargetName="Border">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color-Disabled-Foreground}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentPresenter
								Margin="2"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								RecognizesAccessKey="True"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefault" Value="true">
								<Setter TargetName="Border" Property="BorderBrush">
									<Setter.Value>
										<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
											<GradientBrush.GradientStops>
												<GradientStopCollection>
													<GradientStop Color="{StaticResource Color-Accent}" Offset="0" />
													<GradientStop Color="{StaticResource Color-Accent}" Offset="1" />
												</GradientStopCollection>
											</GradientBrush.GradientStops>
										</LinearGradientBrush>
									</Setter.Value>
								</Setter>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button" BasedOn="{StaticResource Style-Button-Base}"/>

		<Style x:Key="Style-Button-Empty" TargetType="Button">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<ContentPresenter/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="Style-Button-Plus" TargetType="Button" BasedOn="{StaticResource Style-Button-Empty}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border
							x:Name="ButtonBorder"
							Width="20"
							Height="20"
							CornerRadius="99"
							Background="{StaticResource Brush-Background}">
							<TextBlock
								x:Name="ButtonText"
								Text="+"
								FontFamily="{StaticResource Font-Mono}"
								FontSize="20"
								Foreground="{StaticResource Brush-Foreground}"
								VerticalAlignment="Center"
								HorizontalAlignment="Center"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="ButtonText" Property="Foreground" Value="{StaticResource Brush-Accent}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<!--Menu-->
		<Style x:Key="Style-Menu" TargetType="Menu">
			<Setter Property="Background" Value="{StaticResource Brush-Middleground}"/>
			<Setter Property="Foreground" Value="{StaticResource Brush-Foreground}"/>
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="FontFamily" Value="{StaticResource Font-Sans}"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="FontStyle" Value="Normal"/>
			<Setter Property="FontWeight" Value="Light"/>
		</Style>
		<Style TargetType="Menu" BasedOn="{StaticResource Style-Menu}"/>

		<SolidColorBrush x:Key="Menu.Static.Background" Color="{StaticResource Color-Middleground}"/>
		<SolidColorBrush x:Key="Menu.Static.Border" Color="{StaticResource Color-Middleground-Border}"/>
		<SolidColorBrush x:Key="Menu.Static.Foreground" Color="{StaticResource Color-Foreground}"/>
		<SolidColorBrush x:Key="Menu.Static.Separator" Color="{StaticResource Color-Middleground-Border}"/>
		<SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="{StaticResource Color-Disabled-Foreground}"/>
		<SolidColorBrush x:Key="MenuItem.Selected.Background" Color="{StaticResource Color-Accent-Alpha10}"/>
		<SolidColorBrush x:Key="MenuItem.Selected.Border" Color="{StaticResource Color-Accent}"/>
		<SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="{StaticResource Color-Accent-Alpha10}"/>
		<SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="{StaticResource Color-Accent}"/>
		<SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="Transparent"/>
		<SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="{StaticResource Color-Disabled-Middleground}"/>
		<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
		<Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
		<Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
		<Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
		<Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
		<Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
			<Setter Property="ClickMode" Value="Hover"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Border x:Name="templateRoot" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="Center" Margin="6" VerticalAlignment="Center"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
			<Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
			<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollViewer}">
						<Grid SnapsToDevicePixels="true">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Border Grid.Column="0" Grid.Row="1">
								<ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
							</Border>
							<RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0" Focusable="false" Grid.Row="0" Style="{StaticResource MenuScrollButton}">
								<RepeatButton.Visibility>
									<MultiBinding ConverterParameter="0" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
										<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
									</MultiBinding>
								</RepeatButton.Visibility>
								<Path Data="{StaticResource UpArrow}" Fill="{StaticResource Menu.Static.Foreground}"/>
							</RepeatButton>
							<RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0" Focusable="false" Grid.Row="2" Style="{StaticResource MenuScrollButton}">
								<RepeatButton.Visibility>
									<MultiBinding ConverterParameter="100" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
										<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
									</MultiBinding>
								</RepeatButton.Visibility>
								<Path Data="{StaticResource DownArrow}" Fill="{StaticResource Menu.Static.Foreground}"/>
							</RepeatButton>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
			<Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
				<Grid VerticalAlignment="Center">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
					<Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Margin="3" VerticalAlignment="Center" Visibility="Collapsed"/>
					<ContentPresenter ContentSource="Header" Grid.Column="1" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="Icon" Value="{x:Null}">
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="true">
					<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsHighlighted" Value="True">
					<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
					<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
					<Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsHighlighted" Value="True"/>
						<Condition Property="IsEnabled" Value="False"/>
					</MultiTrigger.Conditions>
					<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
					<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
				</MultiTrigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
			<Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
				<Grid VerticalAlignment="Center">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
					<Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{TemplateBinding Foreground}" Margin="3" VerticalAlignment="Center" Visibility="Collapsed"/>
					<ContentPresenter ContentSource="Header" Grid.Column="1" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" PlacementTarget="{Binding ElementName=templateRoot}">
						<Border x:Name="SubMenuBorder" Background="{StaticResource Menu.Static.Background}" BorderBrush="{StaticResource Menu.Static.Border}" BorderThickness="1" Padding="2">
							<ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
								<Grid RenderOptions.ClearTypeHint="Enabled">
									<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
										<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
									</Canvas>
									<Rectangle Fill="{StaticResource Menu.Static.Separator}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
									<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
								</Grid>
							</ScrollViewer>
						</Border>
					</Popup>
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="IsSuspendingPopupAnimation" Value="true">
					<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
				</Trigger>
				<Trigger Property="Icon" Value="{x:Null}">
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="true">
					<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsHighlighted" Value="True">
					<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
					<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
					<Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
				</Trigger>
				<Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
					<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
					<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
			<Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Height="22" SnapsToDevicePixels="true">
				<Grid Margin="-1">
					<Grid.ColumnDefinitions>
						<ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
						<ColumnDefinition Width="13"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="30"/>
						<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
						<ColumnDefinition Width="20"/>
					</Grid.ColumnDefinitions>
					<ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
					<Border x:Name="GlyphPanel" Background="{StaticResource MenuItem.Selected.Background}" BorderBrush="{StaticResource MenuItem.Selected.Border}" BorderThickness="1" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22">
						<Path x:Name="Glyph" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Height="11" Width="10"/>
					</Border>
					<ContentPresenter x:Name="menuHeaderContainer" ContentSource="Header" Grid.Column="2" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
					<TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="Icon" Value="{x:Null}">
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="True">
					<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsHighlighted" Value="True">
					<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
					<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
					<Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsHighlighted" Value="True"/>
						<Condition Property="IsEnabled" Value="False"/>
					</MultiTrigger.Conditions>
					<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
					<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
				</MultiTrigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
			<Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Height="22" SnapsToDevicePixels="true">
				<Grid Margin="-1">
					<Grid.ColumnDefinitions>
						<ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
						<ColumnDefinition Width="13"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="30"/>
						<ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
						<ColumnDefinition Width="20"/>
					</Grid.ColumnDefinitions>
					<ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
					<Border x:Name="GlyphPanel" Background="{StaticResource MenuItem.Highlight.Background}" BorderBrush="{StaticResource MenuItem.Highlight.Border}" BorderThickness="1" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22">
						<Path x:Name="Glyph" Data="{DynamicResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Height="11" Width="9"/>
					</Border>
					<ContentPresenter ContentSource="Header" Grid.Column="2" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
					<TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
					<Path x:Name="RightArrow" Grid.Column="5" Data="{StaticResource RightArrow}" Fill="{StaticResource Menu.Static.Foreground}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
					<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
						<Border x:Name="SubMenuBorder" Background="{StaticResource Menu.Static.Background}" BorderBrush="{StaticResource Menu.Static.Border}" BorderThickness="1" Padding="2">
							<ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
								<Grid RenderOptions.ClearTypeHint="Enabled">
									<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
										<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
									</Canvas>
									<Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
									<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
								</Grid>
							</ScrollViewer>
						</Border>
					</Popup>
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="IsSuspendingPopupAnimation" Value="true">
					<Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
				</Trigger>
				<Trigger Property="Icon" Value="{x:Null}">
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="True">
					<Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
					<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
				</Trigger>
				<Trigger Property="IsHighlighted" Value="True">
					<Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
					<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
					<Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
					<Setter Property="Fill" TargetName="RightArrow" Value="{StaticResource Menu.Disabled.Foreground}"/>
				</Trigger>
				<Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
					<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
					<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<Style x:Key="MenuItemStyle1" TargetType="{x:Type MenuItem}">
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
			<Style.Triggers>
				<Trigger Property="Role" Value="TopLevelHeader">
					<Setter Property="Background" Value="Transparent"/>
					<Setter Property="BorderBrush" Value="Transparent"/>
					<Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
					<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
					<Setter Property="Padding" Value="6,0"/>
				</Trigger>
				<Trigger Property="Role" Value="TopLevelItem">
					<Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
					<Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}"/>
					<Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
					<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
					<Setter Property="Padding" Value="6,0"/>
				</Trigger>
				<Trigger Property="Role" Value="SubmenuHeader">
					<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
				</Trigger>
			</Style.Triggers>
		</Style>


		<!--ContextMenu-->
		<Style x:Key="Style-ContextMenu" TargetType="{x:Type ContextMenu}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
			<Setter Property="HasDropShadow" Value="True"/>
			<Setter Property="Foreground" Value="{StaticResource Brush-Foreground}"/>
			<Setter Property="FontFamily" Value="{StaticResource Font-Sans}"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="FontStyle" Value="Normal"/>
			<Setter Property="FontWeight" Value="Light"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ContextMenu}">
						<Border x:Name="Border" Background="{StaticResource Brush-Middleground}" BorderThickness="1">
							<Border.BorderBrush>
								<SolidColorBrush Color="{StaticResource Color-Middleground-Border}"/>
							</Border.BorderBrush>
							<StackPanel
								IsItemsHost="True"
								KeyboardNavigation.DirectionalNavigation="Cycle"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="HasDropShadow" Value="true">
								<Setter TargetName="Border" Property="Padding" Value="0,3,0,3" />
								<Setter TargetName="Border" Property="CornerRadius" Value="4" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="ContextMenu" BasedOn="{StaticResource Style-ContextMenu}"/>


		<!--TextBox-->
		<Style TargetType="{x:Type TextBox}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="AllowDrop" Value="True"/>
			<Setter Property="SelectionBrush" Value="{StaticResource Brush-Foreground}"/>
			<Setter Property="CaretBrush" Value="{StaticResource Brush-Foreground}"/>
			<Setter Property="Foreground" Value="{StaticResource Brush-Foreground}"/>
			<Setter Property="FontFamily" Value="{StaticResource Font-Sans}"/>
			<Setter Property="FontSize" Value="15"/>
			<Setter Property="FontStyle" Value="Normal"/>
			<Setter Property="FontWeight" Value="Light"/>
			<Setter Property="ContextMenu">
				<Setter.Value>
					<ContextMenu>
						<MenuItem Command="ApplicationCommands.Copy"/>
						<MenuItem Command="ApplicationCommands.Cut"/>
						<MenuItem Command="ApplicationCommands.Paste"/>
					</ContextMenu>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBoxBase}">
						<Border Name="Border" CornerRadius="8" Padding="2" BorderThickness="1">
							<Border.Background>
								<SolidColorBrush Color="{StaticResource Color-Middleground}"/>
							</Border.Background>
							<Border.BorderBrush>
								<SolidColorBrush Color="{StaticResource Color-Middleground-Border}"/>
							</Border.BorderBrush>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames
												Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color-Disabled-Middleground}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="ReadOnly">
										<Storyboard>
											<ColorAnimationUsingKeyFrames
												Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color-Disabled-Middleground}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="MouseOver"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ScrollViewer
								Margin="2"
								x:Name="PART_ContentHost"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<!--ScrollBar-->
		<Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Border Background="Transparent"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="BorderBrush" Value="{StaticResource Brush-Middleground}"/>
			<Setter Property="Background" Value="{StaticResource Brush-Middleground}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border x:Name="Border" CornerRadius="2">
							<Border.Background>
								<SolidColorBrush Color="{StaticResource Color-Middleground}"/>
							</Border.Background>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames
												Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color-Middleground-Border}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
			<Border>
				<Track x:Name="PART_Track" IsDirectionReversed="True">
					<Track.DecreaseRepeatButton>
						<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
					</Track.DecreaseRepeatButton>
					<Track.Thumb>
						<Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0"/>
					</Track.Thumb>
					<Track.IncreaseRepeatButton>
						<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand"/>
					</Track.IncreaseRepeatButton>
				</Track>
			</Border>
		</ControlTemplate>
		<ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
			<Border>
				<Track x:Name="PART_Track" IsDirectionReversed="False">
					<Track.DecreaseRepeatButton>
						<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand"/>
					</Track.DecreaseRepeatButton>
					<Track.Thumb>
						<Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1"/>
					</Track.Thumb>
					<Track.IncreaseRepeatButton>
						<RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand"/>
					</Track.IncreaseRepeatButton>
				</Track>
			</Border>
		</ControlTemplate>
		<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Horizontal">
					<Setter Property="Width" Value="Auto"/>
					<Setter Property="Height" Value="8"/>
					<Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
				</Trigger>
				<Trigger Property="Orientation" Value="Vertical">
					<Setter Property="Width" Value="8"/>
					<Setter Property="Height" Value="Auto"/>
					<Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
				</Trigger>
			</Style.Triggers>
		</Style>

	</Application.Resources>
</Application>
