<UserControl
	x:Class="Mossy.MossyBrowser"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:Mossy"
    x:Name="MossyBrowserRoot"
    mc:Ignorable="d"
	d:DataContext="{d:DesignInstance Type=local:ViewModel, IsDesignTimeCreatable=False}"
	d:DesignWidth="1600"
    d:DesignHeight="900">

	<Grid Background="{StaticResource Brush-Background}">
		<DockPanel>

			<!--Menu-->
			<Menu DockPanel.Dock="Top">
				<MenuItem Header="_File">
					<MenuItem Header="Add _Project" Command="{Binding AddProjectCommand}"/>
					<MenuItem Header="Add _Tag" Command="{Binding AddTagCommand}"/>
					<Separator/>
					<MenuItem Header="_Auto Open Last Database" IsCheckable="True" IsChecked="{Binding AutoOpenLastDatabase}"/>
					<Separator/>
					<MenuItem Header="_Close Database" Command="{Binding CloseDatabaseCommand}"/>
					<MenuItem Header="_Exit" Command="{Binding ExitCommand}"/>
				</MenuItem>
				<MenuItem Header="_Edit">
					<MenuItem Header="Delete _Project"
							  Command="{Binding DeleteProjectCommand}" CommandParameter="{Binding SelectedProject}"
							  IsEnabled="{Binding SelectedProject, Converter={StaticResource Conv-NotNull}}"/>
					<MenuItem Header="Delete _Tag"
							  Command="{Binding DeleteTagCommand}" CommandParameter="{Binding SelectedProject}"
							  IsEnabled="{Binding SelectedTag, Converter={StaticResource Conv-NotNull}}"/>
				</MenuItem>
				<MenuItem Header="_About" Command="{Binding AboutCommand}"/>
			</Menu>

			<!--Main Content-->
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="350"/>
					<ColumnDefinition Width="1"/>
					<ColumnDefinition Width="3*"/>
					<ColumnDefinition Width="1"/>
					<ColumnDefinition Width="2*"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>


				<!--Left Side Bar-->
				<Grid Grid.Column="0" Margin="10">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="3*"/>
						<RowDefinition Height="2*"/>
					</Grid.RowDefinitions>

					<Grid.Resources>
						<Style TargetType="TextBlock" BasedOn="{StaticResource Style-LabelText}">
							<Setter Property="Margin" Value="0,20,0,0"/>
						</Style>
						<Style TargetType="ListBox">
							<Setter Property="Background" Value="Transparent"/>
							<Setter Property="BorderBrush" Value="Transparent"/>
							<Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
							<Setter Property="ItemsControl.ItemTemplate">
								<Setter.Value>
									<DataTemplate>
										<TextBlock Text="{Binding Name}"/>
									</DataTemplate>
								</Setter.Value>
							</Setter>
						</Style>
						<Style TargetType="ListBoxItem">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="ListBoxItem">
										<Border x:Name="Border" Padding="2" SnapsToDevicePixels="True" BorderThickness="1">
											<Border.Background>
												<SolidColorBrush Color="Transparent"/>
											</Border.Background>
											<Border.BorderBrush>
												<SolidColorBrush Color="Transparent"/>
											</Border.BorderBrush>
											<VisualStateManager.VisualStateGroups>
												<VisualStateGroup x:Name="CommonStates">
													<VisualState x:Name="Normal"/>
													<VisualState x:Name="MouseOver">
														<Storyboard>
															<ColorAnimationUsingKeyFrames
																Storyboard.TargetName="Border"
																Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
																<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color-Accent}"/>
															</ColorAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="Disabled"/>
												</VisualStateGroup>
												<VisualStateGroup x:Name="SelectionStates">
													<VisualState x:Name="Unselected"/>
													<VisualState x:Name="Selected">
														<Storyboard>
															<ColorAnimationUsingKeyFrames
																Storyboard.TargetName="Border"
																Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
																<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color-Accent-Alpha25}"/>
															</ColorAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="SelectedUnfocused">
														<Storyboard>
															<ColorAnimationUsingKeyFrames
																Storyboard.TargetName="Border"
																Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
																<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color-Accent-Alpha25}"/>
															</ColorAnimationUsingKeyFrames>
														</Storyboard>
													</VisualState>
												</VisualStateGroup>
											</VisualStateManager.VisualStateGroups>
											<ContentPresenter/>
										</Border>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Grid.Resources>

					<TextBox
						Grid.Row="0"
						x:Name="SearchTextBox"
						Margin="0,5,0,0"
						Text="{Binding SearchFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
					<TextBlock Grid.Row="0" Margin="7,10,0,0" Text="Search">
						<TextBlock.Style>
							<Style TargetType="TextBlock">
								<Setter Property="Focusable" Value="False"/>
								<Setter Property="IsHitTestVisible" Value="False"/>
								<Setter Property="Foreground" Value="{StaticResource Brush-Disabled-Foreground}"/>
								<Setter Property="FontFamily" Value="{StaticResource Font-Sans}"/>
								<Setter Property="FontSize" Value="15"/>
								<Setter Property="FontStyle" Value="Normal"/>
								<Setter Property="FontWeight" Value="Light"/>
								<Setter Property="Visibility" Value="Hidden"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding Text, ElementName=SearchTextBox}" Value="">
										<Setter Property="Visibility" Value="Visible"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBlock.Style>
					</TextBlock>

					<!--This trickery is to make sure that both lists stay in view,
					but that there is no big gap when the lists only have a few items.
					The Margin is a hacky way to take the label text size into account...-->
					<Border x:Name="ProjectsScaleRef" Grid.Row="1" Margin="0,60,0,0" Background="Transparent"/>
					<Border x:Name="TagsScaleRef" Grid.Row="2" Margin="0,60,0,0" Background="Transparent"/>

					<StackPanel
						Grid.Row="1"
						Grid.RowSpan="99"
						Margin="10">

						<TextBlock
							Text="PROJECTS"/>
						<ListBox
							MaxHeight="{Binding ActualHeight, ElementName=ProjectsScaleRef}"
							ItemsSource="{Binding Projects.View}"
							SelectedItem="{Binding SelectedProject}"/>

						<TextBlock
							Text="TAGS"/>
						<ListBox
							Grid.Row="2"
							MaxHeight="{Binding ActualHeight, ElementName=TagsScaleRef}"
							ItemsSource="{Binding Tags.View}"
							SelectedItem="{Binding SelectedTag}"/>
					</StackPanel>
				</Grid>


				<!--Divider-->
				<Border Grid.Column="1" Background="{StaticResource Brush-Middleground-Border}" Margin="0,10,0,10"/>


				<!--Project Inspector-->
				<Grid
					Grid.Column="2"
					x:Name="ProjectBorder"
					Visibility="{Binding SelectedProject, Converter={StaticResource Conv-Visibility}}"
					DragOver="Project_DragOver"
					Drop="Project_Drop"
					PreviewDragEnter="Project_PreviewDragEnter"
					PreviewDragLeave="Project_PreviewDragLeave"
					PreviewDragOver="Project_PreviewDragOver"
					PreviewDrop="Project_PreviewDrop">

					<Grid.Style>
						<Style TargetType="Grid">
							<Style.Resources>
								<Storyboard x:Key="BeginDragStoryboard">
									<ColorAnimation
										Duration="0:0:0"
										Storyboard.TargetName="ProjectBorder"
										Storyboard.TargetProperty="BorderBrush.Color"
										To="LimeGreen"/>
								</Storyboard>
								<Storyboard x:Key="EndDragStoryboard">
									<ColorAnimation
										Duration="0:0:0"
										Storyboard.TargetName="ProjectBorder"
										Storyboard.TargetProperty="BorderBrush.Color"
										To="White"/>
								</Storyboard>
							</Style.Resources>
							<Setter Property="AllowDrop" Value="True"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding SelectedProject}" Value="{x:Null}">
									<Setter Property="AllowDrop" Value="False"/>
								</DataTrigger>
								<EventTrigger RoutedEvent="DragEnter">
									<EventTrigger.Actions>
										<BeginStoryboard Storyboard="{StaticResource BeginDragStoryboard}"/>
									</EventTrigger.Actions>
								</EventTrigger>
								<EventTrigger RoutedEvent="Drop">
									<EventTrigger.Actions>
										<BeginStoryboard Storyboard="{StaticResource EndDragStoryboard}"/>
									</EventTrigger.Actions>
								</EventTrigger>
								<EventTrigger RoutedEvent="DragLeave">
									<EventTrigger.Actions>
										<BeginStoryboard Storyboard="{StaticResource EndDragStoryboard}"/>
									</EventTrigger.Actions>
								</EventTrigger>
							</Style.Triggers>
						</Style>
					</Grid.Style>

					<Grid.RowDefinitions>
						<RowDefinition Height="*"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="3*"/>
					</Grid.RowDefinitions>

					<Border Grid.RowSpan="99" Background="{StaticResource Brush-Disabled-Middleground}"/>
					<Image
						Grid.RowSpan="99"
						Visibility="{Binding SelectedProject, Converter={StaticResource Conv-Visibility}}"
						Stretch="UniformToFill"
						HorizontalAlignment="Center"
						VerticalAlignment="Top">
						<Image.Source>
							<MultiBinding Converter="{StaticResource Conv-DocumentPathImage}">
								<Binding Path="DataContext.SelectedProject.CoverDocument" ElementName="MossyBrowserRoot"/>
								<Binding Path="DataContext.Database" ElementName="MossyBrowserRoot"/>
							</MultiBinding>
						</Image.Source>
					</Image>
					<Image
						Grid.RowSpan="99"
						Visibility="{Binding SelectedProject, Converter={StaticResource Conv-Visibility}}"
						Stretch="UniformToFill"
						HorizontalAlignment="Center"
						VerticalAlignment="Top">
						<Image.Source>
							<MultiBinding Converter="{StaticResource Conv-DocumentPathImage}">
								<Binding Path="DataContext.SelectedProject.CoverDocument" ElementName="MossyBrowserRoot"/>
								<Binding Path="DataContext.Database" ElementName="MossyBrowserRoot"/>
							</MultiBinding>
						</Image.Source>
						<Image.Effect>
							<BlurEffect Radius="60" RenderingBias="Quality" KernelType="Gaussian"/>
						</Image.Effect>
						<Image.OpacityMask>
							<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
								<GradientStop Color="Transparent" Offset="0"/>
								<GradientStop Color="White" Offset="0.5"/>
							</LinearGradientBrush>
						</Image.OpacityMask>
					</Image>
					<Border
						Grid.RowSpan="99"
						Background="{StaticResource Brush-Background}">
						<Border.OpacityMask>
							<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
								<GradientStop Color="#00FFFFFF" Offset="0"/>
								<GradientStop Color="#70FFFFFF" Offset="0.125"/>
								<GradientStop Color="#BFFFFFFF" Offset="0.25"/>
								<GradientStop Color="#E0FFFFFF" Offset="0.375"/>
								<GradientStop Color="#EFFFFFFF" Offset="0.5"/>
								<GradientStop Color="#FFFFFFFF" Offset="1"/>
							</LinearGradientBrush>
						</Border.OpacityMask>
					</Border>

					<StackPanel
						Grid.Row="1"
						Margin="30">

						<Button
							Command="{Binding SetProjectCreatedDateCommand}"
							CommandParameter="{Binding SelectedProject}"
							HorizontalAlignment="Left"
							Style="{StaticResource Style-Button-Empty}">
							<TextBlock
								FontWeight="Light"
								Text="{Binding SelectedProject.DateCreated, StringFormat='MMM d, yyyy'}">
								<TextBlock.Style>
									<Style TargetType="TextBlock" BasedOn="{StaticResource Style-BodyText}">
										<Style.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="Foreground" Value="{StaticResource Brush-Accent}"/>
											</Trigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</Button>

						<Button
							Command="{Binding SetProjectNameCommand}"
							CommandParameter="{Binding SelectedProject}"
							HorizontalAlignment="Left"
							Style="{StaticResource Style-Button-Empty}">
							<TextBlock
								FontSize="50"
								FontWeight="SemiBold"
								Text="{Binding SelectedProject.Name}">
								<TextBlock.Style>
									<Style TargetType="TextBlock" BasedOn="{StaticResource Style-BodyText}">
										<Style.Triggers>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="Foreground" Value="{StaticResource Brush-Accent}"/>
											</Trigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</Button>

						<StackPanel
							Orientation="Horizontal"
							Height="40">

							<TextBlock
								Text="AKA"
								Margin="0,2,2,0"
								FontSize="14"
								VerticalAlignment="Center"
								FontWeight="Light"/>

							<ItemsControl ItemsSource="{Binding SelectedProject.AltNames}" VerticalAlignment="Center">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<StackPanel Orientation="Horizontal" IsItemsHost="True"/>
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<StackPanel Orientation="Horizontal">
											<Button
												Command="{Binding DataContext.SetProjectAltNameCommand, ElementName=MossyBrowserRoot}"
												CommandParameter="{Binding}"
												Style="{StaticResource Style-Button-Empty}">
												<TextBlock
													Text="{Binding}"
													FontWeight="SemiBold"
													Margin="8,0,0,0">
													<TextBlock.Style>
														<Style TargetType="TextBlock" BasedOn="{StaticResource Style-BodyText}">
															<Style.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter Property="Foreground" Value="{StaticResource Brush-Accent}"/>
																</Trigger>
															</Style.Triggers>
														</Style>
													</TextBlock.Style>
												</TextBlock>
											</Button>
											<TextBlock Text=",">
												<TextBlock.Visibility>
													<MultiBinding Converter="{StaticResource Conv-IsNotLastItemVisibility}">
														<Binding Path="DataContext.SelectedProject.AltNames" ElementName="MossyBrowserRoot"/>
														<Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
													</MultiBinding>
												</TextBlock.Visibility>
											</TextBlock>
										</StackPanel>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>

							<Button
								Style="{StaticResource Style-Button-Plus}"
								Command="{Binding AddProjectAltNameCommand}"
								Margin="8,1,0,0"/>
						</StackPanel>

						<StackPanel
							Orientation="Horizontal"
							Height="40"
							Margin="0,5,0,0">

							<TextBlock
								Text="TAGS"
								Margin="0,2,2,0"
								FontSize="14"
								VerticalAlignment="Center"
								FontWeight="Light"/>

							<ItemsControl ItemsSource="{Binding SelectedProject.Tags}" VerticalAlignment="Center">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<StackPanel Orientation="Horizontal" IsItemsHost="True"/>
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<Border Background="{StaticResource Brush-Background-Alpha50}" CornerRadius="20" Margin="0,0,4,0">
											<Button
												Command="{Binding DataContext.DeleteProjectTagCommand, ElementName=MossyBrowserRoot}"
												CommandParameter="{Binding}"
												Style="{StaticResource Style-Button-Empty}">
												<TextBlock
													FontWeight="SemiBold"
													Margin="10,6">
													<TextBlock.Style>
														<Style TargetType="TextBlock" BasedOn="{StaticResource Style-BodyText}">
															<Style.Triggers>
																<Trigger Property="IsMouseOver" Value="True">
																	<Setter Property="Foreground" Value="{StaticResource Brush-Accent}"/>
																</Trigger>
															</Style.Triggers>
														</Style>
													</TextBlock.Style>
													<Run Text="{Binding Category}"/>
													<Run Text="-"/>
													<Run Text="{Binding Name}"/>
												</TextBlock>
											</Button>
										</Border>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>

							<Button
								Style="{StaticResource Style-Button-Plus}"
								Command="{Binding AddProjectTagCommand}"
								Margin="8,1,0,0"/>
						</StackPanel>

					</StackPanel>

					<ListBox
						Grid.Row="2"
						Margin="30,0,30,30"
						Background="Transparent"
						BorderBrush="Transparent"
						SelectionMode="Extended"
						ItemsSource="{Binding SelectedProject.Documents}">

						<ListBox.Resources>
							<Style TargetType="ListBoxItem">
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="ListBoxItem">
											<Border x:Name="Border" Padding="2" SnapsToDevicePixels="True" BorderThickness="1">
												<Border.Background>
													<SolidColorBrush Color="Transparent"/>
												</Border.Background>
												<Border.BorderBrush>
													<SolidColorBrush Color="Transparent"/>
												</Border.BorderBrush>
												<VisualStateManager.VisualStateGroups>
													<VisualStateGroup x:Name="CommonStates">
														<VisualState x:Name="Normal"/>
														<VisualState x:Name="MouseOver">
															<Storyboard>
																<ColorAnimationUsingKeyFrames
																	Storyboard.TargetName="Border"
																	Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
																	<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color-Accent}"/>
																</ColorAnimationUsingKeyFrames>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Disabled"/>
													</VisualStateGroup>
													<VisualStateGroup x:Name="SelectionStates">
														<VisualState x:Name="Unselected"/>
														<VisualState x:Name="Selected">
															<Storyboard>
																<ColorAnimationUsingKeyFrames
																	Storyboard.TargetName="Border"
																	Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
																	<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color-Accent-Alpha25}"/>
																</ColorAnimationUsingKeyFrames>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="SelectedUnfocused">
															<Storyboard>
																<ColorAnimationUsingKeyFrames
																	Storyboard.TargetName="Border"
																	Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
																	<EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color-Accent-Alpha25}"/>
																</ColorAnimationUsingKeyFrames>
															</Storyboard>
														</VisualState>
													</VisualStateGroup>
												</VisualStateManager.VisualStateGroups>
												<ContentPresenter/>
											</Border>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</ListBox.Resources>

						<ListBox.ItemTemplate>
							<DataTemplate>
								<Border
									MouseMove="Document_MouseMove"
									MouseDown="Document_MouseDown"
									Padding="8"
									Background="{StaticResource Brush-Middleground}"
									BorderBrush="{StaticResource Brush-Middleground-Border}"
									BorderThickness="1">

									<Border.ContextMenu>
										<ContextMenu>
											<MenuItem
												Header="Rename"
												Visibility="{Binding DataContext, RelativeSource={RelativeSource Self}, Converter={StaticResource Conv-RenameVisibility}}"
												Command="{Binding DataContext.SetDocumentNameCommand, Source={x:Reference MossyBrowserRoot}}"
												CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}"/>
											<MenuItem Header="Add To Queue" IsEnabled="False"/>
											<MenuItem
												Header="Set As Cover"
												Command="{Binding DataContext.SetProjectCoverDocumentCommand, Source={x:Reference MossyBrowserRoot}}"
												CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}"/>
											<Separator/>
											<MenuItem
												Header="Delete"
												Foreground="Red"
												Command="{Binding DataContext.DeleteDocumentCommand, Source={x:Reference MossyBrowserRoot}}"
												CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}"/>
										</ContextMenu>
									</Border.ContextMenu>

									<StackPanel>
										<TextBlock
											FontSize="14"
											Foreground="{StaticResource Brush-Label}"
											Text="{Binding DateCreated, StringFormat='g'}"/>
										<StackPanel Orientation="Horizontal" Height="28">
											<Path
												VerticalAlignment="Center"
												Margin="5"
												Stretch="Uniform"
												Fill="{StaticResource Brush-Foreground}">
												<Path.Style>
													<Style TargetType="Path">
														<Setter Property="Data" Value="{StaticResource Geometry-DocType-File}"/>
														<Style.Triggers>
															<DataTrigger Binding="{Binding Path.Type}" Value="{x:Static local:MossyDocumentPathType.Link}">
																<Setter Property="Data" Value="{StaticResource Geometry-DocType-Link}"/>
															</DataTrigger>
															<DataTrigger Binding="{Binding Path.Type}" Value="{x:Static local:MossyDocumentPathType.Url}">
																<Setter Property="Data" Value="{StaticResource Geometry-DocType-Url}"/>
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</Path.Style>
											</Path>
											<TextBlock
												VerticalAlignment="Center"
												Margin="6,0,0,0"
												FontSize="18"
												Text="{Binding Path.DisplayPath}"/>
										</StackPanel>
									</StackPanel>
								</Border>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>

				</Grid>


				<!--Tag Inspector-->
				<Border Grid.Column="2" Visibility="Collapsed">
					<TextBlock Text="TODO TAG INSPECTOR" Foreground="{StaticResource Brush-Foreground}"/>
				</Border>


				<!--Divider-->
				<Border Grid.Column="3" Background="{StaticResource Brush-Middleground-Border}" Margin="0,10,0,10"/>


				<!--Document Inspector-->
				<Border Grid.Column="4">
					<TextBlock Text="TODO DOC INSPECTOR" Foreground="{StaticResource Brush-Foreground}"/>
				</Border>


				<!--Playlist-->
				<Border Grid.Column="4">
					<TextBlock Text="TODO PLAYLIST" Foreground="{StaticResource Brush-Foreground}"/>
				</Border>


				<!--Media Player Controls-->
				<Grid
					Grid.Row="2" Grid.ColumnSpan="99"
					Background="{StaticResource Brush-Middleground}">

					<StackPanel
						Orientation="Horizontal"
						HorizontalAlignment="Center">

						<Button IsEnabled="{Binding MediaPlayer.IsLoaded}"
								Command="{Binding MediaPlayer.PauseResumeCommand}"
								Margin="4">
							<TextBlock Text="PREV"/>
						</Button>

						<Button IsEnabled="{Binding MediaPlayer.IsLoaded}"
								Command="{Binding MediaPlayer.PauseResumeCommand}"
								Margin="4">
							<TextBlock Text="PLAY"/>
						</Button>

						<Button IsEnabled="{Binding MediaPlayer.IsLoaded}"
								Command="{Binding MediaPlayer.PauseResumeCommand}"
								Margin="4">
							<TextBlock Text="NEXT"/>
						</Button>

						<Rectangle Fill="Green" Width="25" Height="25"/>

						<ProgressBar
							Height="10"
							Width="80"
							Margin="10"
							Value="50"
							VerticalAlignment="Center"
							Foreground="{StaticResource Brush-Foreground}"
							Background="{StaticResource Brush-Background}"/>

						<Separator Opacity="0" Width="100"/>

						<TextBlock
							VerticalAlignment="Center"
							Foreground="{StaticResource Brush-Foreground}"
							Text="{Binding MediaPlayer.Position, StringFormat={}{0:mm\\:ss}, FallbackValue=0:00}"/>

						<ProgressBar
							Height="10"
							Width="500"
							Margin="10"
							Value="50"
							VerticalAlignment="Center"
							Foreground="{StaticResource Brush-Accent}"
							Background="{StaticResource Brush-Background}"/>

						<TextBlock
							VerticalAlignment="Center"
							Foreground="{StaticResource Brush-Foreground}"
							Text="{Binding MediaPlayer.Duration, StringFormat={}{0:mm\\:ss}, FallbackValue=0:00}"/>

						<Separator Opacity="0" Width="100"/>

						<Rectangle Fill="Yellow" Width="40" Height="40" Margin="8"/>

						<StackPanel VerticalAlignment="Center">
							<TextBlock Text="document title"/>
							<TextBlock Text="project title"/>
						</StackPanel>

					</StackPanel>

					<Button IsEnabled="{Binding MediaPlayer.IsLoaded}"
							Command="{Binding MediaPlayer.PauseResumeCommand}"
							HorizontalAlignment="Right"
							Margin="4">
						<TextBlock Text="LIST"/>
					</Button>

				</Grid>
			</Grid>
		</DockPanel>
	</Grid>
</UserControl>
